*** How to Co-work on git ***
1. Find uuhuang918/ClothesToU
2. Click "Fork"
3. Copy the forked URL "https://github.com/zxc5356061/ClothesToU" and clone
4. Write my code.
5. Create a new branch named "dev" based on "Origin/Master"
6. Commit and pull
7. Create Pull Request

*** MemberService ***
## [v] New Member Register
## [v] Member Login
## [v] Member Center page
## [working on] Update Member data
## [] Update Current Password
## [] Forgot Password
## [] MemberData CRUD(backend)
======================

## New Member Register
[v] add /Models/EFModels/AppDbContext

[v] add /Models/Core/ViewModels/RegisterVM
		-public string Account { get; set; }
		-public string Password { get; set; }
		-public string ConfirmPassword { get; set; }
		-public string Name { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }

[v] add /Models/UseCases/RegisterRequest class
		-public string Account { get; set; }
		-public string Password { get; set; }
		-public string Name { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }

[v] add /Models/UseCases/RegisterResponse class
		-public bool IsSuccess { get; set; }
		-public string ErrorMessage { get; set; }
		-public RegisterEntity Data { get; set; }

[v] add /Models/Entities/RegisterEntity class
		-public string Account { get; set; }
		-public string Password { get; set; }
		-public string Name { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }
		-public string ConfirmCode { get; set; }
		-public const string SALT = "!@#";
		-public string EncryptedPassword { get; }

[v] add /Models/Extensions
		-RegisterEntityExt
			public static Member ToEFMember(this RegisterEntity source)
		-RegisterRequestExt
			public static RegisterEntity ToRegisterEntity(this RegisterRequest source)
		-RegisterVMExt
			public static RegisterRequest ToRegisterRequest(this RegisterVM source)

[v] add /Models/Core/MemberServices
		-public RegisterResponse CreateNewMember(RegisterRequest request)

[v] add /Controllers/MembersController/
		-public ActionResult Index()
		-public ActionResult Register()
		-[HttpPost]public ActionResult Register(RegisterVM registerVM)

[v] add /Models/UseCases/RegisterCommand class( with Execute method)
		-public RegisterResponse Execute(RegisterVM registerVM)

[v] add IRegisterRepository & RegisterRepository
		-bool IsExist(string account);
		-void Create(RegisterEntity entity);

[v] add /Views/Members/Register.cshtml(create)
[v] add /Views/Members/Register.cshtml(empty)
======================

## Member Login
[v] modify web.config, add Authenthcation node
	  <system.web>
		<compilation debug="true" targetFramework="4.8" />
		<httpRuntime targetFramework="4.8" />
		  <authentication mode="Forms">
			<forms name="event.web" loginUrl="/Home/Login/" defaultUrl="/Home/Index/">
			</forms>
		  </authentication>
	  </system.web>

[v] modify MemberController.About, add "Authorize" attribute(This is a DemoPage.)

[v] add MembersController.Logout()

[v] add /Models/ViewModels/LoginVM.cs
		-public string Account { get; set; }
		-public string Password { get; set; }

[v] add /Models/UseCases/LoginRequest class
		-public string Account { get; set; }
		-public string Password { get; set; }

[v] add /Models/UseCases/LoginResponse class
		-public bool IsSuccess { get; set; }

[v] add /LoginEntity(從資料庫撈Member的資料，以便與使用者輸入的LoginRequest比對是否一致)
        -public string Account { get; set; }
        -public string EncryptedPassword { get; set; }

[v] add /Models/Extensions
		-LoginVMExt
			public static LoginRequest ToLoginRequest(this LoginVM source)

[v] add /MemberService
		-public bool IsValid(string account, string password)
		-public string ProcessLogin(string account, bool rememberMe, out HttpCookie cookie)

[v] add /LoginCommand
		-public LoginResponse Execute(LoginVM loginVM)

[v] add ILoginRepository & LoginRepository
		-LoginEntity Load(string account);

[v] add MembersController.Login(), and create "Login"(create) view page

[v] modify /Views/Shared/_Layout.cshtml, add "Login/Logout" links
		-/Views/Shared/_Layout.cshtml
		        <ul class="nav navbar-nav navbar-right">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li><a href="#">嗨 @(User.Identity.Name)</a></li>
                        <li><a href="/Members/LogOut">登出</a></li>
                    }
                    else
                    {
                        <li><a href="/Members/Login">登入</a></li>
                    }
                </ul>

[v] Amend /ClothesToU.BackEnd.Site/App_Start/RouteConfig.cs to prevent initializing error
		-defaults: new { controller = "BackendHome", action = "Index", id = UrlParameter.Optional }
		-Amend /ClothesToU.BackEnd.Site/HomeController Name to /BackendHomeController
		-Amend /ClothesToU.BackEnd.Site/Views/BackendHome
======================

## [v] Member Center page
[v] 會員中心頁(/Members/Index)
		-add MembersController.Index(), Index view page
[v] modify /Views/Shared/_Layout.cshtml
		<li>@Html.ActionLink("會員中心", "Index", "Members")</li>
======================

## [working on] Update Member data(/Members/EditProfile)
[v] add /Models/Entities/EditProfileEntity class
        -public int Id { get; set; }
		-public string Account { get; set; }
		-public string Name { get; set; }
		-public bool IsConfirmed { get; set; }
		-public string ConfirmCode { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }

[v] add /Models/ViewModels/EditProfileVM.cs
		-public int Id { get; set; }
		-public string Account { get; set; }
		-public string Name { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }

[v] add /Models/UseCases/EditProfileRequest class
		-public string Account { get; set; }
		-public string Name { get; set; }
		-public string Mobile { get; set; }
		-public string Address { get; set; }

[v] add /Models/Extensions/MemberEntityExt
		-public static EditProfileVM ToEditProfileVM(this MemberEntity source)
			-Id = source.Id,
			-Account = source.Account,
			-Name = source.Name,
			-IsConfirmed = source.IsConfirmed,
			-ConfirmCode = source.ConfirmCode,
			-Mobile = source.Mobile,
			-Address = source.Address

[v] add /Models/Extensions/EditProfileVMExt
		-public static EditProfileRequest ToEditProfileRequest(this EditProfileVM source)
            -Id = source.Id,
            -Account = source.Account,
            -Name = source.Name,
            -IsConfirmed = source.IsConfirmed,
            -ConfirmCode = source.ConfirmCode,
            -Mobile = source.Mobile,
            -Address = source.Address,

[v] add /Models/Core/Interfaces/IEditMemberDataRepository class
		//for updating general member data except password
		-MemberEntity Load(string account);
		-void Update(EditProfileEntity entity);
		//for updating password
		-MemberEntity Load(int memberId);
		-void UpdatePassword(int memberId, string encryptedPassword);

[v] Load current member data before editing
		-public class MembersController : Controller
			-add IEditMemberDataRepository editMemberDataRepository = new EditMemberDataRepository();
			-implement EditMemberRepository > public MemberEntity Load(string account)
			-public ActionResult EditProfile()[Authorize]
			-amend /Views/Members/EditProfile.cshtml(set Account field to readonly)
				<dl class="dl-horizontal">
					<dt>
						@Html.DisplayNameFor(model => model.Account)
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Account)
					</dd>
				</dl>

[working on] implement EditMemberDataRepository class
[v] implement EditMemberDataRepository Update function
		-public void Update(EditProfileEntity entity)
		    -Member member = db.Members.Find(entity.Id);
            -member.Name = entity.Name;
            -member.IsConfirmed = entity.IsConfirmed;
            -member.ConfirmCode = entity.ConfirmCode;
            -member.Mobile = entity.Mobile;
            -member.Address = entity.Address;

[v] add /Models/Extensions EditProfileRequestExt
		-public static MemberEntity ToMemberEntity(this EditProfileRequest source)
			-Account = source.Account,
			-Name = source.Name,
			-IsConfirmed = source.IsConfirmed,
			-ConfirmCode = source.ConfirmCode,
			-Mobile = source.Mobile,
			-Address = source.Address,

[working on] service: public void UpdateProfile(UpdateProfileRequest request)

[working on] add /Models/UseCases/EditProfileCommand class
		-public EditProfileResponse Execute(EditProfileVM editProfileVM)

[working on] add new function in public class MembersController
		-public ActionResult EditProfile(EditProfileVM model)[HttpPost][Authorize]



[] add UpdateProfileRequest class, add MemberService.UpdateProfile(UpdateProfileRequest)
	UpdateProfileRequest class 加入 string "CurrentUserAccount property

[working on] add /Models/UseCases/EditProfileResponse class

[working on] add EditProfileResponseExt
        public static EditProfileVM ToEditProfileVM(this EditProfileResponse source)
        {
            return new EditProfileVM
            {
                Id = source.Data.Id,
                Account = source.Data.Account,
                Name = source.Data.Name,
                IsConfirmed = source.Data.IsConfirmed,
                ConfirmCode = source.Data.ConfirmCode,
                Mobile = source.Data.Mobile,
                Address = source.Data.Address,
            };
        }








[] add MembersController.EditProfile() , add "EditProfile" view page

[] modify IMemberRepository=> add IsExists(account,excludeId), Update(MemberEntity)
[] 如果更新個資成功,且有改帳唬, 就自動轉向到logout page
[] 變更密碼(/Members/EditPassword/)
	add EditPasswordVM, ChangePasswordRequest
	add IMemberRepository.UpdatePassword()
[] /Members/Index/, EditProfile,EditPassword, Logout 要加[Authorize]



[] add MembersController.EditProfile() , add "EditProfile" view page
[] add UpdateProfileRequest class, add MemberService.UpdateProfile(UpdateProfileRequest)
	UpdateProfileRequest class 加入 string "CurrentUserAccount property
[] modify IMemberRepository=> add IsExists(account,excludeId), Update(MemberEntity)
[] 如果更新個資成功,且有改帳唬, 就自動轉向到logout page
[] 變更密碼(/Members/EditPassword/)
	add EditPasswordVM, ChangePasswordRequest
	add IMemberRepository.UpdatePassword()
[] /Members/Index/, EditProfile,EditPassword, Logout 要加[Authorize]

======================
## [] Update Current Password


======================
## [] 